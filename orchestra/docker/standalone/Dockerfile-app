FROM ubuntu

# creating postgres user
RUN useradd -ms /bin/bash postgres

ARG PG_VERSION

RUN apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys B97B0AFCAA1A47F044F244A07FCC7D46ACCC4CF8
RUN echo "deb http://apt.postgresql.org/pub/repos/apt/ precise-pgdg main" > /etc/apt/sources.list.d/pgdg.list
RUN apt-get update &&\
    apt-get install -y python-software-properties software-properties-common \
                       postgresql-$PG_VERSION postgresql-client-$PG_VERSION postgresql-contrib-$PG_VERSION

WORKDIR /home/postgres/

RUN mkdir sql
COPY ./sql ./sql
RUN chown -Rf postgres:postgres ./sql

USER postgres

ARG LANGUAGE

RUN /etc/init.d/postgresql start &&\
    psql --command "ALTER USER postgres WITH PASSWORD 'postgres';" &&\
    psql --command "CREATE DATABASE nqidb OWNER postgres;" &&\
    psql -U postgres -d nqidb -a -f /home/postgres/sql/create-all.sql &&\
    psql -U postgres -d nqidb -a -f /home/postgres/sql/init-all-${LANGUAGE}.sql

# Add VOLUMEs to allow backup of config, logs and databases
VOLUME  ["/etc/postgresql", "/var/log/postgresql", "/var/lib/postgresql"]

RUN echo "host all  all    0.0.0.0/0  trust" >> /etc/postgresql/$PG_VERSION/main/pg_hba.conf
RUN echo "listen_addresses='*'" >> /etc/postgresql/$PG_VERSION/main/postgresql.conf

USER root

WORKDIR /home/postgres/

# copying and unpacking archive
ARG ARCHIVE_NAME
ADD ${ARCHIVE_NAME} ./tmp
RUN chown -Rf postgres:postgres ./tmp
RUN mv ./tmp/$(echo $ARCHIVE_NAME | sed 's/.......$//g') ./tmp/install_dir

WORKDIR /home/postgres/tmp/install_dir/

# copying install file
COPY ./install.properties ./

# installing app
RUN ./install.sh

WORKDIR /home/postgres/

# removing unneeded files
RUN rm -Rf ./tmp
RUN rm -Rf /home/postgres/sql

# adding the license
COPY ./nqi.license /home/postgres/app/orchestra/applications/local/license

WORKDIR /home/postgres/app/orchestra/bin

RUN echo "#!/bin/bash" > ./startup.sh
RUN echo "/usr/lib/postgresql/"$PG_VERSION"/bin/postgres -D /var/lib/postgresql/"$PG_VERSION"/main -c config_file=/etc/postgresql/"$PG_VERSION"/main/postgresql.conf &" >> ./startup.sh
RUN echo "pg_isready -h localhost -p \""5432"\" > /dev/null 2> /dev/null" >> ./startup.sh
RUN echo "attempt=0" >> ./startup.sh
RUN echo "res=\$?" >> ./startup.sh
RUN echo "while [ ! \$res -eq 0 ]; do" >> ./startup.sh
RUN echo "    echo 'Waiting to postgres to be up ... (code='\$res')'" >> ./startup.sh
RUN echo "    sleep 3" >> ./startup.sh
RUN echo "    pg_isready -h localhost -p \""5432"\" > /dev/null 2> /dev/null" >> ./startup.sh
RUN echo "    res=\$?" >> ./startup.sh
RUN echo "    ((attempt++))" >> ./startup.sh
RUN echo "    if [ \$attempt > 5 ]; then" >> ./startup.sh
RUN echo "        echo 'Max attempt reached, exit ...'" >> ./startup.sh
RUN echo "        exit 1" >> ./startup.sh
RUN echo "    fi" >> ./startup.sh
RUN echo "done" >> ./startup.sh
RUN echo "./nqi-service run" >> ./startup.sh

RUN chown postgres:postgres ./startup.sh
RUN chmod +x ./startup.sh

USER postgres

EXPOSE 8080

CMD ./startup.sh